// - створити функцію яка виводить масив
let array = [];
function thisFunction() {
    console.log(array);
}
thisFunction(array);

// - створити функцію яка заповнює масив рандомними числами та виводить його.
function isfunction(length, min, max) {
    let array2 = [];
    for (let i = 0; i < length; i++) {
        array2.push(Math.floor(Math.random() * (max - min) + min))
    }
    return array2;
}
let arr = isfunction(10, 1, 50);
console.log(arr);

// - створити функцію яка приймає три числа та виводить та повертає найменьше.
function fun(a, b, c) {
    let min;
    if (a <= b && a <= c) min = a;
    if (b <= a && b <= c) min = b;
    if (c <= b && c <= a) min = c;
    return min;
}
let x = fun(15, 7, 9);
console.log(x);

// - створити функцію яка приймає три числа та виводить та повертає найбільше.
function fun2(a, b, c) {
    let max;
    if (a >= b && a >= c) max = a;
    if (b >= a && b >= c) max = b;
    if (c >= b && c >= a) max = c;
    return max;
}
let y = fun2(15, 7, 9);
console.log(y);

// - створити функцію яка приймає будь-яку кількість чисел, повертає найменьше, а виводить найбільше
function minandmax() {
    let min = arguments[0];
    let max = arguments[0];
    for (const item of arguments) {
        if (item > max) max = item;
        if (item < min) min = item;
    }
    console.log(max);
    return min;
}
let min = minandmax(123, 87, 4, 130, 93);
console.log(min);

// - створити функцію яка повертає найбільше число з масиву
// - створити функцію яка повертає найменьше число з масиву
// - створити функцію яка приймає масив чисел та складає значення елементів масиву та повертає його.
// - створити функцію яка приймає масив чисел та повертає середнє арифметичне його значень.
// - Створити функцію яка приймає масив будь яких объектів, та повертає значення кількості об'єктів в масиві
// - Створити функцію яка приймає масив будь яких объектів, та повертає загальн кількість полів в них
// - створити функцію  яка скаладає значення елементів з однаковими індексами  та повертає новий результуючий масив.
//   Приклад
//   [1,2,3,4]
//   [2,3,4,5]
//   результат
//   [3,5,7,9]
// - *** приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
// - *** створити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// Приклад
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]

// Створити функцію яка :
// - Додає в боді блок з текстом "Hello owu"
// - Додає в боді елемент з текстом . Тип елементу та текст отримати через аргументи
// - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
// Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали. Всі властивості авто в обному блоці
// - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
// Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали.
// Для кожної властивості створити всередені блока автомоблія свій блок

// (на основі минулого ДЗ)
// **- функція приймає 2 масиви з рівною кількістю об'єктів та з'єднює в один об'єкт користувача та місто з відповідними "id" та "user_id",
// та повертає масив цих з'єднаних об'єктів.
// Приклад масивів:
//             let usersWithId = [{id: 1, name: 'vasya', age: 31, status: false}, {id: 2, name: 'petya', age: 30, status: true}, {id: 3, name: 'kolya', age: 29, status: true}, {id: 4, name: 'olya', age: 28, status: false},];
//             let citiesWithId = [{user_id: 3, country: 'USA', city: 'Portland'}, {user_id: 1, country: 'Ukraine', city: 'Ternopil'}, {user_id: 2, country: 'Poland', city: 'Krakow'}, {user_id: 4, country: 'USA', city: 'Miami'},];
// Частковий приклад реультату: